[project]
name = "archivey"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "davi davi", email = "gh@davitf.com" }
]
requires-python = ">=3.10"
dependencies = [
    "backports-strenum>=1.3.1 ; python_full_version < '3.11'",
    "tqdm>=4.67.1",
]

[project.scripts]
archivey = "archivey.cli:main"

[project.optional-dependencies]
optional = [
    "cryptography>=45.0.3",
    "lz4>=4.4.4",
    "py7zr>=1.0.0",
    "rarfile>=4.2",
    "zstandard>=0.23.0",
    "pycdlib>=1.14.0",
    "rapidgzip>=0.14.3",
    "indexed_bzip2>=1.6.0",
    "python-xz>=0.5.0",
    "pyzstd>=0.17.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "devtools>=0.12.2",
    "hatch>=1.14.1",
    "pytest>=8.3.5",
    "pytest-timeout>=2.3.1",
    "pytest-cov>=5.0.0",
    "ruff>=0.11.11",
    "tox>=4.0.0",
    "pdoc>=14.0.0", # I'm assuming ^ is not supported by Hatch, so I'm using >=
    "pytest-parallel>=0.1.1",
    # Required to make pytest-parallel work with current pytest version, see
    # https://github.com/kevlened/pytest-parallel/issues/118
    "py>=1.11.0",  
]

[tool.pytest.ini_options]
pythonpath = ["src", "."]
testpaths = ["tests"]
addopts = "--log-level=DEBUG --cov=archivey --cov-report=term-missing"
timeout = 5
timeout_method = "thread"
log_format = "%(asctime)s %(levelname)s %(threadName)s %(name)s:%(filename)s:%(lineno)d %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"

[tool.hatch.envs.default]
python = "3.13"
dependencies = [
    "devtools>=0.12.2",
    "hatch>=1.14.1", # Hatch itself as a dep for the env, usually fine
    "pytest>=8.3.5",
    "pytest-timeout>=2.3.1",
    "pytest-cov>=5.0.0",
    "ruff>=0.11.11",
    "tox>=4.0.0",
    "pdoc>=14.0.0",
]
features = ["optional"]

[tool.hatch.envs.default.scripts]
lint = "ruff check --fix . && ruff format . && npx pyright ."
test = "uv run --extra optional pytest --workers auto {args}"
docs = "sh docs/generate_api_docs.sh"

[tool.ruff]
target-version = "py310"
lint.extend-select = ["I"]  # sort imports

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "except ImportError",
]
